package model;
// Generated 07/08/2018 09:35:59 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Funcionario generated by hbm2java
 */
@Entity
@Table(name="funcionario"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="cpf") 
)
public class Funcionario  implements java.io.Serializable {


     private int idPessoa;
     private Cargos cargos;
     private Pessoa pessoa;
     private int cpf;
     private Date nascimento;
     private Set usuarios = new HashSet(0);
     private Set pedidos = new HashSet(0);

    public Funcionario() {
    }

	
    public Funcionario(Cargos cargos, Pessoa pessoa, int cpf, Date nascimento) {
        this.cargos = cargos;
        this.pessoa = pessoa;
        this.cpf = cpf;
        this.nascimento = nascimento;
    }
    public Funcionario(Cargos cargos, Pessoa pessoa, int cpf, Date nascimento, Set usuarios, Set pedidos) {
       this.cargos = cargos;
       this.pessoa = pessoa;
       this.cpf = cpf;
       this.nascimento = nascimento;
       this.usuarios = usuarios;
       this.pedidos = pedidos;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="pessoa"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="id_pessoa", unique=true, nullable=false)
    public int getIdPessoa() {
        return this.idPessoa;
    }
    
    public void setIdPessoa(int idPessoa) {
        this.idPessoa = idPessoa;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_cargos", nullable=false)
    public Cargos getCargos() {
        return this.cargos;
    }
    
    public void setCargos(Cargos cargos) {
        this.cargos = cargos;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public Pessoa getPessoa() {
        return this.pessoa;
    }
    
    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }

    
    @Column(name="cpf", unique=true, nullable=false)
    public int getCpf() {
        return this.cpf;
    }
    
    public void setCpf(int cpf) {
        this.cpf = cpf;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="nascimento", nullable=false, length=13)
    public Date getNascimento() {
        return this.nascimento;
    }
    
    public void setNascimento(Date nascimento) {
        this.nascimento = nascimento;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="funcionario")
    public Set getUsuarios() {
        return this.usuarios;
    }
    
    public void setUsuarios(Set usuarios) {
        this.usuarios = usuarios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="funcionario")
    public Set getPedidos() {
        return this.pedidos;
    }
    
    public void setPedidos(Set pedidos) {
        this.pedidos = pedidos;
    }




}


